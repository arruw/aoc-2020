{
	"aoc": {
		"scope": "rust",
		"prefix": "aoc",
		"description": "Advent of Code solution template",
		"body": [
			"const DAY: u32 = $1;",
			"",
			"type Input = $2;",
			"type Output = $3;",
			"",
			"fn input_transformer(input: &str) -> Input {",
			"    todo!()",
			"}",
			"",
			"fn solve_part1(input: &Input) -> Output {",
			"    todo!()",
			"}",
			"",
			"fn solve_part2(input: &Input) -> Output {",
			"    todo!()",
			"}",
			"",
			"#[cfg(test)]",
			"mod tests {",
			"    use super::{input_transformer, solve_part1, solve_part2, DAY};",
			"    use crate::utils::*;",
			"",
			"    const SAMPLE: &str = todo!();",
			"",
			"    #[test]",
			"    fn test_part1_sample() {",
			"        let solution = solve_part1(&input_transformer(SAMPLE));",
			"",
			"        assert_eq!(0, solution);",
			"    }",
			"",
			"    #[test]",
			"    fn test_part1_puzzle() {",
			"        let input = read_input(2020, DAY).unwrap();",
			"        let solution = solve_part1(&input_transformer(&input));",
			"",
			"        assert_eq!(0, solution);",
			"    }",
			"",
			"    #[test]",
			"    fn test_part2_sample() {",
			"        let solution = solve_part2(&input_transformer(SAMPLE));",
			"",
			"        assert_eq!(0, solution);",
			"    }",
			"",
			"    #[test]",
			"    fn test_part2_puzzle() {",
			"        let input = read_input(2020, DAY).unwrap();",
			"        let solution = solve_part2(&input_transformer(&input));",
			"",
			"        assert_eq!(0, solution);",
			"    }",
			"}"
		]
	}
}